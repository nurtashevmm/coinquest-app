#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
echo "üìù –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã..."

# package.json
cat > package.json << 'EOF'
{
  "name": "coinquest-app",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "tsc && vite build",
    "lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-router-dom": "^6.8.0",
    "@supabase/supabase-js": "^2.38.5",
    "i18next": "^23.7.6",
    "react-i18next": "^13.5.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.43",
    "@types/react-dom": "^18.2.17",
    "@typescript-eslint/eslint-plugin": "^6.14.0",
    "@typescript-eslint/parser": "^6.14.0",
    "@vitejs/plugin-react": "^4.2.1",
    "autoprefixer": "^10.4.16",
    "eslint": "^8.55.0",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.5",
    "postcss": "^8.4.32",
    "tailwindcss": "^3.3.6",
    "typescript": "^5.2.2",
    "vite": "^5.0.8"
  }
}
EOF

# vite.config.ts
cat > vite.config.ts << 'EOF'
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
  resolve: {
    alias: {
      '@': '/src'
    }
  }
})
EOF

# tsconfig.json
cat > tsconfig.json << 'EOF'
{
  "compilerOptions": {
    "target": "ES2020",
    "useDefineForClassFields": true,
    "lib": ["ES2020", "DOM", "DOM.Iterable"],
    "module": "ESNext",
    "skipLibCheck": true,
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "resolveJsonModule": true,
    "isolatedModules": true,
    "noEmit": true,
    "jsx": "react-jsx",
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true,
    "baseUrl": ".",
    "paths": {
      "@/*": ["src/*"]
    }
  },
  "include": ["src"],
  "references": [{ "path": "./tsconfig.node.json" }]
}
EOF

# tsconfig.node.json
cat > tsconfig.node.json << 'EOF'
{
  "compilerOptions": {
    "composite": true,
    "skipLibCheck": true,
    "module": "ESNext",
    "moduleResolution": "bundler",
    "allowSyntheticDefaultImports": true
  },
  "include": ["vite.config.ts"]
}
EOF

# eslint.config.js
cat > eslint.config.js << 'EOF'
import js from '@eslint/js'
import globals from 'globals'
import reactHooks from 'eslint-plugin-react-hooks'
import reactRefresh from 'eslint-plugin-react-refresh'
import tseslint from 'typescript-eslint'

export default tseslint.config(
  { ignores: ['dist'] },
  {
    extends: [js.configs.recommended, ...tseslint.configs.recommended],
    files: ['**/*.{ts,tsx}'],
    languageOptions: {
      ecmaVersion: 2020,
      globals: globals.browser,
    },
    plugins: {
      'react-hooks': reactHooks,
      'react-refresh': reactRefresh,
    },
    rules: {
      ...reactHooks.configs.recommended.rules,
      'react-refresh/only-export-components': [
        'warn',
        { allowConstantExport: true },
      ],
    },
  },
)
EOF

# index.html
cat > index.html << 'EOF'
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>CoinQuest - –¢–≤–æ–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –ø–æ–º–æ—â–Ω–∏–∫</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.tsx"></script>
  </body>
</html>
EOF

# .env.local
cat > .env.local << 'EOF'
# Supabase Configuration
VITE_SUPABASE_URL=your_supabase_url_here
VITE_SUPABASE_ANON_KEY=your_supabase_anon_key_here

# App Configuration
VITE_APP_NAME=CoinQuest
VITE_APP_VERSION=1.0.0
EOF

# .gitignore
cat > .gitignore << 'EOF'
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
dist
dist-ssr
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Supabase
.supabase
EOF

# README.md
cat > README.md << 'EOF'
# CoinQuest ü¶äüí∞

–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç–∏ –¥–ª—è –¥–µ—Ç–µ–π —Å –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º –§–∏–Ω–ª–∏.

## –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏

- ü¶ä –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂ –§–∏–Ω–ª–∏
- üí∞ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –¥–æ—Ö–æ–¥–æ–≤ –∏ —Ä–∞—Å—Ö–æ–¥–æ–≤
- üéØ –ü–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ü–µ–ª–µ–π
- üìä –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞
- üåç –ú–Ω–æ–≥–æ—è–∑—ã—á–Ω–æ—Å—Ç—å (—Ä—É—Å—Å–∫–∏–π/–∞–Ω–≥–ª–∏–π—Å–∫–∏–π)
- üé® –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞

## –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏

- React 18 + TypeScript
- Vite
- Tailwind CSS
- Supabase (–±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö)
- React Router
- i18next (–∏–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è)

## –£—Å—Ç–∞–Ω–æ–≤–∫–∞

```bash
# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
npm install

# –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
npm run dev

# –°–±–æ—Ä–∫–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
npm run build
```

## –ù–∞—Å—Ç—Ä–æ–π–∫–∞

1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ `.env.local` –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Supabase –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π `npm run dev`

## –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞

```
src/
‚îú‚îÄ‚îÄ components/     # React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
‚îú‚îÄ‚îÄ pages/         # –°—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
‚îú‚îÄ‚îÄ hooks/         # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ö—É–∫–∏
‚îú‚îÄ‚îÄ lib/           # –£—Ç–∏–ª–∏—Ç—ã –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
‚îú‚îÄ‚îÄ types/         # TypeScript —Ç–∏–ø—ã
‚îú‚îÄ‚îÄ styles/        # CSS —Å—Ç–∏–ª–∏
‚îî‚îÄ‚îÄ i18n/          # –§–∞–π–ª—ã –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏
```

## –õ–∏—Ü–µ–Ω–∑–∏—è

MIT License
EOF

# –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞

# –î–æ–ø–æ–ª–Ω—è–µ–º lib/supabase.ts
cat >> src/lib/supabase.ts << 'EOF'
_ANON_KEY || '';

// Note: Replace with your actual Supabase credentials
// You can get them from your Supabase project dashboard

// Uncomment when you have Supabase set up:
// import { createClient } from '@supabase/supabase-js'
// export const supabase = createClient(supabaseUrl, supabaseAnonKey)

// For now, we'll use a mock client
export const supabase = {
  from: (table: string) => ({
    select: () => Promise.resolve({ data: [], error: null }),
    insert: () => Promise.resolve({ data: [], error: null }),
    update: () => Promise.resolve({ data: [], error: null }),
    delete: () => Promise.resolve({ data: [], error: null })
  })
};
EOF

# src/lib/utils.ts
cat > src/lib/utils.ts << 'EOF'
// Utility functions

export const formatCurrency = (amount: number, currency = 'USD'): string => {
  return new Intl.NumberFormat('en-US', {
    style: 'currency',
    currency: currency,
  }).format(amount);
};

export const formatDate = (date: string | Date): string => {
  const d = new Date(date);
  return d.toLocaleDateString('ru-RU');
};

export const cn = (...classes: (string | undefined | null | false)[]): string => {
  return classes.filter(Boolean).join(' ');
};

export const generateId = (): string => {
  return Date.now().toString(36) + Math.random().toString(36).substr(2);
};
EOF

# src/types/index.ts
cat > src/types/index.ts << 'EOF'
export interface User {
  id: string;
  email: string;
  name: string;
  avatar?: string;
  createdAt: string;
}

export interface Transaction {
  id: string;
  userId: string;
  amount: number;
  description: string;
  category: string;
  date: string;
  type: 'income' | 'expense';
  createdAt: string;
}

export interface Category {
  id: string;
  name: string;
  color: string;
  icon: string;
  userId: string;
}

export interface Goal {
  id: string;
  userId: string;
  title: string;
  description: string;
  targetAmount: number;
  currentAmount: number;
  deadline: string;
  isCompleted: boolean;
  createdAt: string;
}

export interface FinleyCustomization {
  id: string;
  userId: string;
  selectedFinley: string;
  color: string;
  accessory: string;
  updatedAt: string;
}

export type FinleyEmotion = 'happy' | 'neutral' | 'excited' | 'thinking' | 'sad';
export type FinleySize = 'small' | 'medium' | 'large';
EOF

# src/styles/globals.css
cat > src/styles/globals.css << 'EOF'
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  html {
    font-family: 'Inter', system-ui, sans-serif;
  }
  
  body {
    @apply bg-gray-50 text-gray-900;
  }
}

@layer components {
  .btn {
    @apply px-4 py-2 rounded-lg font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2;
  }
  
  .btn-primary {
    @apply bg-blue-600 text-white hover:bg-blue-700 focus:ring-blue-500;
  }
  
  .btn-secondary {
    @apply bg-gray-200 text-gray-800 hover:bg-gray-300 focus:ring-gray-500;
  }
  
  .card {
    @apply bg-white rounded-lg shadow-md p-6;
  }
}
EOF

# src/styles/components.css
cat > src/styles/components.css << 'EOF'
/* Component-specific styles */

.finley-character {
  transition: transform 0.3s ease;
}

.finley-character:hover {
  transform: scale(1.1);
}

.transaction-item {
  @apply border-b border-gray-100 last:border-b-0;
}

.goal-progress {
  @apply bg-gray-200 rounded-full h-2 overflow-hidden;
}

.goal-progress-bar {
  @apply bg-gradient-to-r from-blue-500 to-green-500 h-full transition-all duration-500;
}

/* Animations */
@keyframes bounce {
  0%, 20%, 53%, 80%, 100% {
    transform: translate3d(0,0,0);
  }
  40%, 43% {
    transform: translate3d(0, -30px, 0);
  }
  70% {
    transform: translate3d(0, -15px, 0);
  }
  90% {
    transform: translate3d(0, -4px, 0);
  }
}

.animate-bounce-slow {
  animation: bounce 2s infinite;
}
EOF

# src/i18n/locales/en.json
cat > src/i18n/locales/en.json << 'EOF'
{
  "app": {
    "name": "CoinQuest",
    "tagline": "Your personal finance companion"
  },
  "navigation": {
    "home": "Home",
    "transactions": "Transactions",
    "planning": "Planning",
    "profile": "Profile"
  },
  "home": {
    "welcome": "Welcome to CoinQuest!",
    "balance": "Balance",
    "monthlyExpenses": "Monthly Expenses",
    "activeGoals": "Active Goals"
  },
  "transactions": {
    "title": "Transactions",
    "addTransaction": "Add Transaction",
    "history": "Transaction History",
    "income": "Income",
    "expense": "Expense",
    "amount": "Amount",
    "description": "Description",
    "category": "Category"
  },
  "planning": {
    "title": "Planning",
    "goals": "Financial Goals",
    "budget": "Budget"
  },
  "profile": {
    "title": "Profile",
    "customization": "Finley Customization",
    "settings": "Settings",
    "language": "Language",
    "currency": "Currency"
  },
  "finley": {
    "classic": "Classic Finley",
    "cool": "Cool Finley",
    "cute": "Cute Finley",
    "color": "Color",
    "accessories": "Accessories",
    "noAccessories": "No accessories",
    "preview": "Preview",
    "saveChanges": "Save Changes"
  },
  "common": {
    "add": "Add",
    "cancel": "Cancel",
    "save": "Save",
    "delete": "Delete",
    "edit": "Edit",
    "create": "Create"
  }
}
EOF

# src/i18n/locales/ru.json
cat > src/i18n/locales/ru.json << 'EOF'
{
  "app": {
    "name": "CoinQuest",
    "tagline": "–¢–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –º–∏—Ä–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤"
  },
  "navigation": {
    "home": "–ì–ª–∞–≤–Ω–∞—è",
    "transactions": "–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏",
    "planning": "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ",
    "profile": "–ü—Ä–æ—Ñ–∏–ª—å"
  },
  "home": {
    "welcome": "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ CoinQuest!",
    "balance": "–ë–∞–ª–∞–Ω—Å",
    "monthlyExpenses": "–†–∞—Å—Ö–æ–¥—ã –∑–∞ –º–µ—Å—è—Ü",
    "activeGoals": "–∞–∫—Ç–∏–≤–Ω—ã–µ"
  },
  "transactions": {
    "title": "–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏",
    "addTransaction": "–î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é",
    "history": "–ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π",
    "income": "–î–æ—Ö–æ–¥",
    "expense": "–†–∞—Å—Ö–æ–¥",
    "amount": "–°—É–º–º–∞",
    "description": "–û–ø–∏—Å–∞–Ω–∏–µ",
    "category": "–ö–∞—Ç–µ–≥–æ—Ä–∏—è"
  },
  "planning": {
    "title": "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ",
    "goals": "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ü–µ–ª–∏",
    "budget": "–ë—é–¥–∂–µ—Ç"
  },
  "profile": {
    "title": "–ü—Ä–æ—Ñ–∏–ª—å",
    "customization": "–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –§–∏–Ω–ª–∏",
    "settings": "–ù–∞—Å—Ç—Ä–æ–π–∫–∏",
    "language": "–Ø–∑—ã–∫",
    "currency": "–í–∞–ª—é—Ç–∞"
  },
  "finley": {
    "classic": "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –§–∏–Ω–ª–∏",
    "cool": "–ö—Ä—É—Ç–æ–π –§–∏–Ω–ª–∏",
    "cute": "–ú–∏–ª—ã–π –§–∏–Ω–ª–∏",
    "color": "–¶–≤–µ—Ç",
    "accessories": "–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã",
    "noAccessories": "–ë–µ–∑ –∞–∫—Å–µ—Å—Å—É–∞—Ä–æ–≤",
    "preview": "–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä",
    "saveChanges": "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è"
  },
  "common": {
    "add": "–î–æ–±–∞–≤–∏—Ç—å",
    "cancel": "–û—Ç–º–µ–Ω–∞",
    "save": "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å",
    "delete": "–£–¥–∞–ª–∏—Ç—å",
    "edit": "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å",
    "create": "–°–æ–∑–¥–∞—Ç—å"
  }
}
EOF

# src/i18n/index.ts
cat > src/i18n/index.ts << 'EOF'
import i18n from 'i18next';
import { initReactI18next } from 'react-i18next';

import en from './locales/en.json';
import ru from './locales/ru.json';

const resources = {
  en: {
    translation: en,
  },
  ru: {
    translation: ru,
  },
};

i18n
  .use(initReactI18next)
  .init({
    resources,
    lng: 'ru', // default language
    fallbackLng: 'en',
    interpolation: {
      escapeValue: false,
    },
  });

export default i18n;
EOF

# src/App.tsx
cat > src/App.tsx << 'EOF'
import React from 'react';
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import { HomePage } from './pages/HomePage';
import { TransactionsPage } from './pages/TransactionsPage';
import { PlanningPage } from './pages/PlanningPage';
import { ProfilePage } from './pages/ProfilePage';
import './styles/globals.css';
import './styles/components.css';
import './i18n';

function App() {
  return (
    <Router>
      <Routes>
        <Route path="/" element={<HomePage />} />
        <Route path="/transactions" element={<TransactionsPage />} />
        <Route path="/planning" element={<PlanningPage />} />
        <Route path="/profile" element={<ProfilePage />} />
      </Routes>
    </Router>
  );
}

export default App;
EOF

# src/main.tsx
cat > src/main.tsx << 'EOF'
import React from 'react'
import ReactDOM from 'react-dom/client'
import App from './App.tsx'

ReactDOM.createRoot(document.getElementById('root')!).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
)
EOF

# src/vite-env.d.ts
cat > src/vite-env.d.ts << 'EOF'
/// <reference types="vite/client" />

interface ImportMetaEnv {
  readonly VITE_SUPABASE_URL: string
  readonly VITE_SUPABASE_ANON_KEY: string
  readonly VITE_APP_NAME: string
  readonly VITE_APP_VERSION: string
}

interface ImportMeta {
  readonly env: ImportMetaEnv
}
EOF

# –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Tailwind CSS
cat > tailwind.config.js << 'EOF'
/** @type {import('tailwindcss').Config} */
export default {
  content: [
    "./index.html",
    "./src/**/*.{js,ts,jsx,tsx}",
  ],
  theme: {
    extend: {
      colors: {
        finley: {
          blue: '#3B82F6',
          green: '#10B981',
          purple: '#8B5CF6',
          orange: '#F59E0B'
        }
      },
      fontFamily: {
        sans: ['Inter', 'system-ui', 'sans-serif'],
      },
    },
  },
  plugins: [],
}
EOF

# –°–æ–∑–¥–∞–µ–º PostCSS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
cat > postcss.config.js << 'EOF'
export default {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}
EOF

echo "‚úÖ –í—Å–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã!"
echo "üöÄ –¢–µ–ø–µ—Ä—å –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
echo "   npm install"
echo "   npm run dev"